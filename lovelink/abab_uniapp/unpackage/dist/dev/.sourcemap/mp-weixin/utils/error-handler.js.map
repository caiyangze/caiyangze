{"version":3,"file":"error-handler.js","sources":["utils/error-handler.js"],"sourcesContent":["/**\r\n * 全局错误处理器\r\n * 专门处理scrollTop相关的错误\r\n */\r\n\r\n// 错误日志收集\r\nconst errorLogs = [];\r\n\r\n/**\r\n * 添加错误日志\r\n * @param {string} type 错误类型\r\n * @param {Error} error 错误对象\r\n * @param {Object} context 上下文信息\r\n */\r\nfunction addErrorLog(type, error, context = {}) {\r\n  const log = {\r\n    type,\r\n    message: error.message,\r\n    stack: error.stack,\r\n    context,\r\n    timestamp: new Date().toISOString(),\r\n    url: window.location ? window.location.href : 'unknown'\r\n  };\r\n  \r\n  errorLogs.push(log);\r\n  \r\n  // 限制日志数量\r\n  if (errorLogs.length > 100) {\r\n    errorLogs.shift();\r\n  }\r\n  \r\n  console.error(`[${type}]`, error.message, context);\r\n}\r\n\r\n/**\r\n * 获取错误日志\r\n * @returns {Array} 错误日志数组\r\n */\r\nexport function getErrorLogs() {\r\n  return [...errorLogs];\r\n}\r\n\r\n/**\r\n * 清空错误日志\r\n */\r\nexport function clearErrorLogs() {\r\n  errorLogs.length = 0;\r\n}\r\n\r\n/**\r\n * 安全的scrollTop设置函数\r\n * 这是最后的防线，确保不会抛出未捕获的错误\r\n */\r\nexport function safeScrollTopSetter(element, value) {\r\n  try {\r\n    if (!element) {\r\n      addErrorLog('SCROLL_ERROR', new Error('Element is null'), { value });\r\n      return false;\r\n    }\r\n    \r\n    if (typeof element.scrollTop === 'undefined') {\r\n      addErrorLog('SCROLL_ERROR', new Error('Element does not have scrollTop property'), { \r\n        element: element.constructor.name,\r\n        value \r\n      });\r\n      return false;\r\n    }\r\n    \r\n    element.scrollTop = value;\r\n    return true;\r\n  } catch (error) {\r\n    addErrorLog('SCROLL_ERROR', error, { \r\n      element: element ? element.constructor.name : 'null',\r\n      value \r\n    });\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 初始化全局错误处理\r\n */\r\nexport function initGlobalErrorHandler() {\r\n  // 捕获未处理的Promise错误\r\n  if (typeof window !== 'undefined') {\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      if (event.reason && event.reason.message && event.reason.message.includes('scrollTop')) {\r\n        addErrorLog('UNHANDLED_PROMISE', event.reason, {\r\n          type: 'scrollTop related'\r\n        });\r\n        \r\n        // 阻止错误继续传播\r\n        event.preventDefault();\r\n        console.warn('ScrollTop错误已被全局处理器捕获并阻止');\r\n      }\r\n    });\r\n    \r\n    // 捕获全局错误\r\n    window.addEventListener('error', (event) => {\r\n      if (event.error && event.error.message && event.error.message.includes('scrollTop')) {\r\n        addErrorLog('GLOBAL_ERROR', event.error, {\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          colno: event.colno\r\n        });\r\n        \r\n        // 阻止错误继续传播\r\n        event.preventDefault();\r\n        console.warn('ScrollTop错误已被全局处理器捕获并阻止');\r\n      }\r\n    });\r\n  }\r\n  \r\n  console.log('全局scrollTop错误处理器已初始化');\r\n}\r\n\r\n/**\r\n * Vue组件错误处理器\r\n * 可以在Vue应用中使用\r\n */\r\nexport function createVueErrorHandler() {\r\n  return (error, instance, info) => {\r\n    if (error.message && error.message.includes('scrollTop')) {\r\n      addErrorLog('VUE_ERROR', error, {\r\n        component: instance ? instance.$options.name || 'Unknown' : 'Unknown',\r\n        info\r\n      });\r\n      \r\n      console.warn('Vue组件中的scrollTop错误已被处理:', error.message);\r\n      return; // 阻止错误继续传播\r\n    }\r\n    \r\n    // 其他错误继续抛出\r\n    throw error;\r\n  };\r\n}\r\n\r\n/**\r\n * 创建安全的响应式引用包装器\r\n * 确保scrollTop引用始终有效\r\n */\r\nexport function createSafeScrollTopRef(initialValue = 0) {\r\n  const ref = {\r\n    _value: initialValue,\r\n    get value() {\r\n      return this._value;\r\n    },\r\n    set value(newValue) {\r\n      try {\r\n        if (typeof newValue === 'number' && !isNaN(newValue)) {\r\n          this._value = newValue;\r\n        } else {\r\n          console.warn('Invalid scrollTop value:', newValue, 'using 0 instead');\r\n          this._value = 0;\r\n        }\r\n      } catch (error) {\r\n        addErrorLog('REF_SETTER_ERROR', error, { newValue });\r\n        this._value = 0;\r\n      }\r\n    }\r\n  };\r\n  \r\n  return ref;\r\n}\r\n\r\n/**\r\n * 监控DOM元素的scrollTop设置\r\n * 在开发环境中使用\r\n */\r\nexport function monitorScrollTopSetting() {\r\n  if (typeof window === 'undefined' || typeof Element === 'undefined') {\r\n    return;\r\n  }\r\n  \r\n  // 保存原始的scrollTop setter\r\n  const originalScrollTopDescriptor = Object.getOwnPropertyDescriptor(Element.prototype, 'scrollTop');\r\n  \r\n  if (originalScrollTopDescriptor && originalScrollTopDescriptor.set) {\r\n    const originalSetter = originalScrollTopDescriptor.set;\r\n    \r\n    // 重写scrollTop setter\r\n    Object.defineProperty(Element.prototype, 'scrollTop', {\r\n      get: originalScrollTopDescriptor.get,\r\n      set: function(value) {\r\n        try {\r\n          if (this === null || this === undefined) {\r\n            addErrorLog('DOM_SCROLL_ERROR', new Error('Trying to set scrollTop on null element'), { value });\r\n            return;\r\n          }\r\n          \r\n          originalSetter.call(this, value);\r\n        } catch (error) {\r\n          addErrorLog('DOM_SCROLL_ERROR', error, { \r\n            element: this ? this.tagName : 'null',\r\n            value \r\n          });\r\n          \r\n          // 不重新抛出错误，避免中断应用\r\n          console.warn('ScrollTop设置失败，已被安全处理:', error.message);\r\n        }\r\n      },\r\n      enumerable: originalScrollTopDescriptor.enumerable,\r\n      configurable: originalScrollTopDescriptor.configurable\r\n    });\r\n    \r\n    console.log('DOM scrollTop监控已启用');\r\n  }\r\n}\r\n\r\nexport default {\r\n  initGlobalErrorHandler,\r\n  createVueErrorHandler,\r\n  safeScrollTopSetter,\r\n  createSafeScrollTopRef,\r\n  monitorScrollTopSetting,\r\n  getErrorLogs,\r\n  clearErrorLogs\r\n};\r\n"],"names":["uni"],"mappings":"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"}
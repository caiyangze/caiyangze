{"version":3,"file":"scroll.js","sources":["utils/scroll.js"],"sourcesContent":["/**\r\n * 滚动相关工具函数\r\n * 解决H5环境下scrollTop设置null对象的问题\r\n */\r\n\r\nimport { createSafeScrollTopRef } from './error-handler'\r\n\r\n/**\r\n * 安全设置scrollTop\r\n * @param {Ref} scrollTopRef - scrollTop的响应式引用\r\n * @param {number} value - 要设置的scrollTop值\r\n */\r\nexport function safeSetScrollTop(scrollTopRef, value) {\r\n  try {\r\n    // 检查scrollTopRef是否为有效的响应式引用\r\n    if (!scrollTopRef) {\r\n      console.warn('scrollTopRef为null或undefined，跳过设置');\r\n      return;\r\n    }\r\n\r\n    // 检查是否为Vue的响应式引用\r\n    if (typeof scrollTopRef !== 'object' || !('value' in scrollTopRef)) {\r\n      console.warn('scrollTopRef不是有效的响应式引用，跳过设置');\r\n      return;\r\n    }\r\n\r\n    // 确保值是有效的数字\r\n    const numValue = typeof value === 'number' ? value : 0;\r\n\r\n    // 安全设置值\r\n    scrollTopRef.value = numValue;\r\n\r\n  } catch (error) {\r\n    console.error('设置scrollTop失败:', error);\r\n    console.error('错误详情:', {\r\n      scrollTopRef: scrollTopRef,\r\n      value: value,\r\n      error: error.message\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 安全设置scrollToView\r\n * @param {Ref} scrollToViewRef - scrollToView的响应式引用\r\n * @param {string} elementId - 要滚动到的元素ID\r\n * @param {number} clearDelay - 清空延迟时间（毫秒）\r\n */\r\nexport function safeSetScrollToView(scrollToViewRef, elementId, clearDelay = 100) {\r\n  try {\r\n    if (scrollToViewRef && scrollToViewRef.value !== null && typeof scrollToViewRef.value !== 'undefined') {\r\n      // 确保elementId是有效的字符串\r\n      const validElementId = typeof elementId === 'string' ? elementId : '';\r\n      scrollToViewRef.value = validElementId;\r\n\r\n      // 延迟清空以便下次滚动生效\r\n      if (clearDelay > 0) {\r\n        setTimeout(() => {\r\n          try {\r\n            if (scrollToViewRef && scrollToViewRef.value !== null) {\r\n              scrollToViewRef.value = '';\r\n            }\r\n          } catch (error) {\r\n            console.warn('清空scrollToView失败:', error);\r\n          }\r\n        }, clearDelay);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.warn('设置scrollToView失败:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * 安全滚动到底部\r\n * @param {Ref} scrollToViewRef - scrollToView的响应式引用\r\n * @param {Ref} scrollTopRef - scrollTop的响应式引用（备用方案）\r\n * @param {string} bottomAnchorId - 底部锚点ID，默认为'bottom-anchor'\r\n */\r\nexport function safeScrollToBottom(scrollToViewRef, scrollTopRef, bottomAnchorId = 'bottom-anchor') {\r\n  try {\r\n    // 检查引用是否有效\r\n    if (!scrollToViewRef || !scrollTopRef) {\r\n      console.warn('滚动引用无效');\r\n      return;\r\n    }\r\n\r\n    // 优先使用scrollToView\r\n    safeSetScrollToView(scrollToViewRef, bottomAnchorId);\r\n\r\n    // 备用方案：同时设置scrollTop，增加成功率\r\n    setTimeout(() => {\r\n      try {\r\n        safeSetScrollTop(scrollTopRef, 999999);\r\n      } catch (scrollError) {\r\n        console.warn('备用scrollTop滚动失败:', scrollError);\r\n      }\r\n    }, 50);\r\n  } catch (error) {\r\n    console.warn('滚动到底部失败:', error);\r\n    // 最后的备用方案\r\n    try {\r\n      safeSetScrollTop(scrollTopRef, 999999);\r\n    } catch (scrollError) {\r\n      console.warn('最终备用滚动也失败:', scrollError);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 安全滚动到顶部\r\n * @param {Ref} scrollTopRef - scrollTop的响应式引用\r\n */\r\nexport function safeScrollToTop(scrollTopRef) {\r\n  safeSetScrollTop(scrollTopRef, 0);\r\n}\r\n\r\n/**\r\n * 检查页面是否仍然活跃\r\n * @returns {boolean} 页面是否活跃\r\n */\r\nexport function isPageActive() {\r\n  try {\r\n    const pages = getCurrentPages();\r\n    return pages && pages.length > 0;\r\n  } catch (error) {\r\n    console.warn('检查页面状态失败:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 创建安全的滚动引用\r\n * @param {number} initialScrollTop - 初始scrollTop值\r\n * @param {string} initialScrollToView - 初始scrollToView值\r\n * @returns {Object} 包含安全的滚动引用\r\n */\r\nexport function createSafeScrollRefs(initialScrollTop = 0, initialScrollToView = '') {\r\n  return {\r\n    scrollTop: createSafeScrollTopRef(initialScrollTop),\r\n    scrollToView: createSafeScrollTopRef(initialScrollToView) // 复用同样的安全机制\r\n  };\r\n}\r\n\r\n/**\r\n * 创建安全的滚动处理器\r\n * @param {Ref} scrollToViewRef - scrollToView的响应式引用\r\n * @param {Ref} scrollTopRef - scrollTop的响应式引用\r\n * @returns {Object} 包含各种滚动方法的对象\r\n */\r\nexport function createSafeScrollHandler(scrollToViewRef, scrollTopRef) {\r\n  return {\r\n    scrollToBottom: (bottomAnchorId) => {\r\n      if (isPageActive()) {\r\n        safeScrollToBottom(scrollToViewRef, scrollTopRef, bottomAnchorId);\r\n      } else {\r\n        console.warn('页面不活跃，跳过滚动操作');\r\n      }\r\n    },\r\n    scrollToTop: () => {\r\n      if (isPageActive()) {\r\n        safeScrollToTop(scrollTopRef);\r\n      } else {\r\n        console.warn('页面不活跃，跳过滚动操作');\r\n      }\r\n    },\r\n    scrollToView: (elementId, clearDelay) => {\r\n      if (isPageActive()) {\r\n        safeSetScrollToView(scrollToViewRef, elementId, clearDelay);\r\n      } else {\r\n        console.warn('页面不活跃，跳过滚动操作');\r\n      }\r\n    },\r\n    setScrollTop: (value) => {\r\n      if (isPageActive()) {\r\n        safeSetScrollTop(scrollTopRef, value);\r\n      } else {\r\n        console.warn('页面不活跃，跳过滚动操作');\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 防抖滚动函数\r\n * @param {Function} scrollFn - 滚动函数\r\n * @param {number} delay - 防抖延迟时间（毫秒）\r\n * @returns {Function} 防抖后的滚动函数\r\n */\r\nexport function debounceScroll(scrollFn, delay = 100) {\r\n  let timeoutId = null;\r\n  \r\n  return function(...args) {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    \r\n    timeoutId = setTimeout(() => {\r\n      try {\r\n        scrollFn.apply(this, args);\r\n      } catch (error) {\r\n        console.warn('防抖滚动执行失败:', error);\r\n      }\r\n    }, delay);\r\n  };\r\n}\r\n\r\n/**\r\n * 节流滚动函数\r\n * @param {Function} scrollFn - 滚动函数\r\n * @param {number} delay - 节流延迟时间（毫秒）\r\n * @returns {Function} 节流后的滚动函数\r\n */\r\nexport function throttleScroll(scrollFn, delay = 100) {\r\n  let lastTime = 0;\r\n  \r\n  return function(...args) {\r\n    const now = Date.now();\r\n    \r\n    if (now - lastTime >= delay) {\r\n      try {\r\n        scrollFn.apply(this, args);\r\n        lastTime = now;\r\n      } catch (error) {\r\n        console.warn('节流滚动执行失败:', error);\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"names":["uni","createSafeScrollTopRef"],"mappings":"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"}
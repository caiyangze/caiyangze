{"version":3,"file":"auth.js","sources":["api/user/auth.js"],"sourcesContent":["/**\r\n * 用户认证相关API\r\n */\r\nimport http from '../http';\r\n\r\n// API基础路径\r\nconst BASE_PATH = '/user';\r\n\r\n/**\r\n * 发送注册验证码\r\n * @param {String} phone 手机号\r\n */\r\nexport const sendRegisterCode = (phone) => {\r\n  return http.post(`${BASE_PATH}/sendCode`, { phone });\r\n};\r\n\r\n/**\r\n * 验证验证码\r\n * @param {String} phone 手机号\r\n * @param {String} code 验证码\r\n * @param {String} password 密码（可选）\r\n * @returns {Promise} 返回包含用户ID的Promise\r\n */\r\nexport const verifyCode = (phone, code, password) => {\r\n  const data = { phone, code };\r\n  if (password) {\r\n    data.password = password;\r\n  }\r\n  return http.post(`${BASE_PATH}/verifyCode`, data);\r\n};\r\n\r\n/**\r\n * 用户登录\r\n * @param {String} phone 手机号\r\n * @param {String} password 密码\r\n */\r\nexport const login = (phone, password) => {\r\n  return http.post(`${BASE_PATH}/login`, { phone, password });\r\n};\r\n\r\n/**\r\n * 验证码登录\r\n * @param {String} phone 手机号\r\n * @param {String} code 验证码\r\n */\r\nexport const loginByCode = (phone, code) => {\r\n  return http.post(`${BASE_PATH}/loginByCode`, { phone, code });\r\n};\r\n\r\n/**\r\n * 发送登录验证码\r\n * @param {String} phone 手机号\r\n */\r\nexport const sendLoginCode = (phone) => {\r\n  return http.post(`${BASE_PATH}/sendLoginCode`, { phone });\r\n};\r\n\r\n\r\n// 获取用户信息\r\nexport const getByUserInfo = (token) =>{\r\n\treturn http.post(`${BASE_PATH}/userInfo`,{token})\r\n}\r\n\r\n// 更新用户省份\r\nexport const updateUserProvince = (token, province) => {\r\n\treturn http.post(`${BASE_PATH}/updateProvince`, { token, province })\r\n}\r\n\r\n/**\r\n * 身份证预验证\r\n * @param {String} realName 真实姓名\r\n * @param {String} idCardNo 身份证号\r\n */\r\nexport const preVerifyIdCard = (realName, idCardNo) => {\r\n  return http.post(`${BASE_PATH}/verification/preVerify`, { realName, idCardNo });\r\n};\r\n\r\n/**\r\n * 提交实名认证\r\n * @param {Object} data 认证数据\r\n */\r\nexport const submitVerification = (data) => {\r\n  return http.post(`${BASE_PATH}/verification/submit`, data);\r\n};\r\n\r\n/**\r\n * 获取认证状态\r\n */\r\nexport const getVerificationStatus = () => {\r\n  return http.get(`${BASE_PATH}/verification/status`);\r\n};\r\n\r\n/**\r\n * 上传身份证正面照片\r\n * @param {String} filePath 本地文件路径\r\n */\r\nexport const uploadIdCardFront = (filePath) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.uploadFile({\r\n      url: http.getBaseUrl() + '/user/verification/upload/idcard-front',\r\n      filePath: filePath,\r\n      name: 'file',\r\n      header: {\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        try {\r\n          const data = JSON.parse(res.data);\r\n          resolve(data);\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 上传身份证背面照片\r\n * @param {String} filePath 本地文件路径\r\n */\r\nexport const uploadIdCardBack = (filePath) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.uploadFile({\r\n      url: http.getBaseUrl() + '/user/verification/upload/idcard-back',\r\n      filePath: filePath,\r\n      name: 'file',\r\n      header: {\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        try {\r\n          const data = JSON.parse(res.data);\r\n          resolve(data);\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 上传人脸照片\r\n * @param {String} filePath 本地文件路径\r\n */\r\nexport const uploadFacePhoto = (filePath) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.uploadFile({\r\n      url: http.getBaseUrl() + '/user/verification/upload/face-photo',\r\n      filePath: filePath,\r\n      name: 'file',\r\n      header: {\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        try {\r\n          const data = JSON.parse(res.data);\r\n          resolve(data);\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 退出登录\r\n */\r\nexport const logout = () => {\r\n  return http.post(`${BASE_PATH}/logout`);\r\n};\r\n\r\nexport default {\r\n  sendRegisterCode,\r\n  verifyCode,\r\n  login,\r\n  loginByCode,\r\n  sendLoginCode,\r\n  logout,\r\n  getByUserInfo,\r\n  preVerifyIdCard,\r\n  submitVerification,\r\n  getVerificationStatus,\r\n  uploadIdCardFront,\r\n  uploadIdCardBack,\r\n  uploadFacePhoto,\r\n  updateUserProvince\r\n};"],"names":["http","uni"],"mappings":"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"}
{"version":3,"file":"matchmaker.js","sources":["api/matchmaker.js"],"sourcesContent":["import http from './http'\r\n\r\n// 红娘服务基础URL\r\nconst MATCHMAKER_BASE_URL = 'http://localhost:9004';\r\nconst BASE_PATH = '/matchmaker/info'\r\n\r\n/**\r\n * 获取红娘列表\r\n * @returns {Promise} 返回红娘列表的Promise\r\n */\r\nexport const getMatchmakerList = () => {\r\n  return http.post(`${BASE_PATH}/list`)\r\n}\r\n\r\n/**\r\n * 获取红娘详情\r\n * @param {Number} matchmakerId 红娘ID\r\n * @returns {Promise} 返回红娘详情的Promise\r\n */\r\nexport const getMatchmakerDetail = (matchmakerId) => {\r\n  return http.post(`${BASE_PATH}/detail`, { matchmakerId })\r\n}\r\n\r\n/**\r\n * 申请成为红娘\r\n * @param {Object} data 申请信息\r\n * @param {String} data.realName 真实姓名\r\n * @param {String} data.phone 联系电话\r\n * @param {String} data.idCardNo 身份证号\r\n * @param {String} data.idCardFront 身份证正面照片URL\r\n * @param {String} data.idCardBack 身份证背面照片URL\r\n * @param {String} data.serviceArea 期望服务区域\r\n * @param {String} data.introduction 个人介绍\r\n * @param {String} data.experience 相关经验\r\n * @returns {Promise} 返回申请结果的Promise\r\n */\r\nexport const applyMatchmaker = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.request({\r\n      url: `${MATCHMAKER_BASE_URL}${BASE_PATH}/apply`,\r\n      method: 'POST',\r\n      data: data,\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        resolve(res.data);\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 检查用户是否已申请红娘\r\n * @returns {Promise} 返回申请状态的Promise\r\n */\r\nexport const checkApplicationStatus = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.request({\r\n      url: `${MATCHMAKER_BASE_URL}${BASE_PATH}/checkApplicationStatus`,\r\n      method: 'GET',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        resolve(res.data);\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 获取用户实名认证信息（用于表单自动填充）\r\n * @returns {Promise} 返回用户实名认证信息的Promise\r\n */\r\nexport const getUserVerification = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.request({\r\n      url: `${MATCHMAKER_BASE_URL}${BASE_PATH}/getUserVerification`,\r\n      method: 'GET',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        resolve(res.data);\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 获取申请记录\r\n * @returns {Promise} 返回申请记录的Promise\r\n */\r\nexport const getApplicationRecord = () => {\r\n  return http.get(`${BASE_PATH}/applicationRecord`)\r\n}\r\n\r\n/**\r\n * 验证申请表单数据\r\n * @param {Object} formData 表单数据\r\n * @returns {Object} 验证结果 {valid: boolean, message: string}\r\n */\r\nexport const validateApplicationForm = (formData) => {\r\n  const { realName, phone, idCardNo, serviceArea, idCardFront, idCardBack, introduction, experience } = formData\r\n  \r\n  // 检查必填字段\r\n  if (!realName || !realName.trim()) {\r\n    return { valid: false, message: '请输入真实姓名' }\r\n  }\r\n  \r\n  if (!phone || !phone.trim()) {\r\n    return { valid: false, message: '请输入联系电话' }\r\n  }\r\n  \r\n  // 验证手机号格式\r\n  const phoneRegex = /^1[3-9]\\d{9}$/\r\n  if (!phoneRegex.test(phone)) {\r\n    return { valid: false, message: '请输入正确的手机号' }\r\n  }\r\n  \r\n  if (!idCardNo || !idCardNo.trim()) {\r\n    return { valid: false, message: '请输入身份证号' }\r\n  }\r\n  \r\n  // 验证身份证号格式\r\n  const idCardRegex = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\r\n  if (!idCardRegex.test(idCardNo)) {\r\n    return { valid: false, message: '请输入正确的身份证号' }\r\n  }\r\n  \r\n  if (!serviceArea || !serviceArea.trim()) {\r\n    return { valid: false, message: '请输入服务区域' }\r\n  }\r\n  \r\n  if (!idCardFront) {\r\n    return { valid: false, message: '请上传身份证正面照片' }\r\n  }\r\n  \r\n  if (!idCardBack) {\r\n    return { valid: false, message: '请上传身份证背面照片' }\r\n  }\r\n  \r\n  if (!introduction || !introduction.trim()) {\r\n    return { valid: false, message: '请填写个人介绍' }\r\n  }\r\n  \r\n  if (introduction.length < 100) {\r\n    return { valid: false, message: '个人介绍不能少于100字' }\r\n  }\r\n  \r\n  if (introduction.length > 500) {\r\n    return { valid: false, message: '个人介绍不能超过500字' }\r\n  }\r\n  \r\n  if (!experience || !experience.trim()) {\r\n    return { valid: false, message: '请填写相关经验' }\r\n  }\r\n  \r\n  if (experience.length < 100) {\r\n    return { valid: false, message: '相关经验不能少于100字' }\r\n  }\r\n  \r\n  if (experience.length > 500) {\r\n    return { valid: false, message: '相关经验不能超过500字' }\r\n  }\r\n  \r\n  return { valid: true, message: '验证通过' }\r\n}\r\n\r\n/**\r\n * 格式化申请状态\r\n * @param {Number} status 申请状态\r\n * @returns {String} 状态描述\r\n */\r\nexport const formatApplicationStatus = (status) => {\r\n  const statusMap = {\r\n    0: '待审核',\r\n    1: '已通过',\r\n    2: '已拒绝'\r\n  }\r\n  return statusMap[status] || '未知状态'\r\n}\r\n\r\n/**\r\n * 获取申请状态颜色\r\n * @param {Number} status 申请状态\r\n * @returns {String} 颜色值\r\n */\r\nexport const getStatusColor = (status) => {\r\n  const colorMap = {\r\n    0: '#f39c12', // 橙色 - 待审核\r\n    1: '#27ae60', // 绿色 - 已通过\r\n    2: '#e74c3c'  // 红色 - 已拒绝\r\n  }\r\n  return colorMap[status] || '#95a5a6'\r\n}\r\n\r\n/**\r\n * 计算申请费用\r\n * @returns {Number} 申请费用（虚拟币）\r\n */\r\nexport const getApplicationFee = () => {\r\n  return 699\r\n}\r\n\r\n/**\r\n * 检查余额是否足够申请\r\n * @param {Number} balance 当前余额\r\n * @returns {Boolean} 是否足够\r\n */\r\nexport const checkBalanceSufficient = (balance) => {\r\n  return balance >= getApplicationFee()\r\n}\r\n\r\nexport default {\r\n  getMatchmakerList,\r\n  getMatchmakerDetail,\r\n  applyMatchmaker,\r\n  checkApplicationStatus,\r\n  getApplicationRecord,\r\n  validateApplicationForm,\r\n  formatApplicationStatus,\r\n  getStatusColor,\r\n  getApplicationFee,\r\n  checkBalanceSufficient\r\n}\r\n"],"names":["uni"],"mappings":";;;AAGA,MAAM,sBAAsB;AAC5B,MAAM,YAAY;AAgCN,MAAC,kBAAkB,CAAC,SAAS;AACvC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,QAAQA,cAAG,MAAC,eAAe,OAAO,KAAK;AAE7CA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,GAAG,mBAAmB,GAAG,SAAS;AAAA,MACvC,QAAQ;AAAA,MACR;AAAA,MACA,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,SAAS;AAAA,MACV;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,gBAAQ,IAAI,IAAI;AAAA,MACjB;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAMY,MAAC,yBAAyB,MAAM;AAC1C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,QAAQA,cAAG,MAAC,eAAe,OAAO,KAAK;AAE7CA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,GAAG,mBAAmB,GAAG,SAAS;AAAA,MACvC,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,SAAS;AAAA,MACV;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,gBAAQ,IAAI,IAAI;AAAA,MACjB;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAMY,MAAC,sBAAsB,MAAM;AACvC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,QAAQA,cAAG,MAAC,eAAe,OAAO,KAAK;AAE7CA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,GAAG,mBAAmB,GAAG,SAAS;AAAA,MACvC,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,SAAS;AAAA,MACV;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,gBAAQ,IAAI,IAAI;AAAA,MACjB;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;;;"}

{"version":3,"file":"photo.js","sources":["api/user/photo.js"],"sourcesContent":["import http from '../http'\r\n\r\nconst BASE_PATH = '/user/photo'\r\n\r\n/**\r\n * 上传相册照片\r\n * @param {String} filePath 本地文件路径\r\n * @param {String} photoDesc 照片描述（可选）\r\n * @param {Number} isPublic 是否公开：0-私密，1-公开（默认1）\r\n * @returns {Promise} 返回上传结果\r\n */\r\nexport const uploadPhoto = (filePath, photoDesc = '', isPublic = 1) => {\r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token') || '';\r\n\r\n    uni.uploadFile({\r\n      url: http.getBaseUrl() + BASE_PATH + '/upload',\r\n      filePath: filePath,\r\n      name: 'file',\r\n      formData: {\r\n        photoDesc: photoDesc,\r\n        isPublic: isPublic\r\n      },\r\n      header: {\r\n        'token': token\r\n      },\r\n      success: (res) => {\r\n        try {\r\n          const data = JSON.parse(res.data);\r\n          resolve(data);\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(err);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 批量上传相册照片\r\n * @param {Array} filePaths 本地文件路径数组\r\n * @param {String} photoDesc 照片描述（可选）\r\n * @param {Number} isPublic 是否公开：0-私密，1-公开（默认1）\r\n * @returns {Promise} 返回批量上传结果\r\n */\r\nexport const uploadPhotos = async (filePaths, photoDesc = '', isPublic = 1) => {\r\n  const uploadPromises = filePaths.map(filePath => uploadPhoto(filePath, photoDesc, isPublic));\r\n  return Promise.all(uploadPromises);\r\n};\r\n\r\n/**\r\n * 获取用户相册列表\r\n * @param {Number} pageNum 页码（默认1）\r\n * @param {Number} pageSize 每页数量（默认20）\r\n * @returns {Promise} 返回相册列表\r\n */\r\nexport const getPhotoList = (pageNum = 1, pageSize = 20) => {\r\n  return http.get(`${BASE_PATH}/list`, {\r\n    pageNum: pageNum,\r\n    pageSize: pageSize\r\n  });\r\n};\r\n\r\n/**\r\n * 删除相册照片\r\n * @param {Number} photoId 照片ID\r\n * @returns {Promise} 返回删除结果\r\n */\r\nexport const deletePhoto = (photoId) => {\r\n  return http.delete(`${BASE_PATH}/delete/${photoId}`);\r\n};\r\n\r\n/**\r\n * 设置照片为头像\r\n * @param {Number} photoId 照片ID\r\n * @returns {Promise} 返回设置结果\r\n */\r\nexport const setAsAvatar = (photoId) => {\r\n  return http.post(`${BASE_PATH}/setAvatar/${photoId}`);\r\n};\r\n\r\n/**\r\n * 取消头像\r\n * @returns {Promise} 返回取消结果\r\n */\r\nexport const cancelAvatar = () => {\r\n  return http.post(`${BASE_PATH}/cancelAvatar`);\r\n};\r\n\r\n/**\r\n * 更新照片信息\r\n * @param {Number} photoId 照片ID\r\n * @param {String} photoDesc 照片描述（可选）\r\n * @param {Number} isPublic 是否公开（可选）\r\n * @returns {Promise} 返回更新结果\r\n */\r\nexport const updatePhoto = (photoId, photoDesc, isPublic) => {\r\n  const params = {};\r\n  if (photoDesc !== undefined) params.photoDesc = photoDesc;\r\n  if (isPublic !== undefined) params.isPublic = isPublic;\r\n  \r\n  return http.put(`${BASE_PATH}/update/${photoId}`, params);\r\n};\r\n"],"names":["uni","http"],"mappings":";;;AAEA,MAAM,YAAY;AASN,MAAC,cAAc,CAAC,UAAU,YAAY,IAAI,WAAW,MAAM;AACrE,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,QAAQA,cAAG,MAAC,eAAe,OAAO,KAAK;AAE7CA,kBAAAA,MAAI,WAAW;AAAA,MACb,KAAKC,SAAI,KAAC,WAAY,IAAG,YAAY;AAAA,MACrC;AAAA,MACA,MAAM;AAAA,MACN,UAAU;AAAA,QACR;AAAA,QACA;AAAA,MACD;AAAA,MACD,QAAQ;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,YAAI;AACF,gBAAM,OAAO,KAAK,MAAM,IAAI,IAAI;AAChC,kBAAQ,IAAI;AAAA,QACb,SAAQ,GAAG;AACV,iBAAO,CAAC;AAAA,QACT;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,GAAG;AAAA,MACX;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAoBY,MAAC,eAAe,CAAC,UAAU,GAAG,WAAW,OAAO;AAC1D,SAAOA,SAAI,KAAC,IAAI,GAAG,SAAS,SAAS;AAAA,IACnC;AAAA,IACA;AAAA,EACJ,CAAG;AACH;AAOY,MAAC,cAAc,CAAC,YAAY;AACtC,SAAOA,SAAAA,KAAK,OAAO,GAAG,SAAS,WAAW,OAAO,EAAE;AACrD;AAOY,MAAC,cAAc,CAAC,YAAY;AACtC,SAAOA,SAAAA,KAAK,KAAK,GAAG,SAAS,cAAc,OAAO,EAAE;AACtD;AAiBY,MAAC,cAAc,CAAC,SAAS,WAAW,aAAa;AAC3D,QAAM,SAAS,CAAA;AACf,MAAI,cAAc;AAAW,WAAO,YAAY;AAChD,MAAI,aAAa;AAAW,WAAO,WAAW;AAE9C,SAAOA,SAAI,KAAC,IAAI,GAAG,SAAS,WAAW,OAAO,IAAI,MAAM;AAC1D;;;;;;"}
